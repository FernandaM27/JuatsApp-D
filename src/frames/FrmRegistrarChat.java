/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Control.ControlChats;
import Control.ControlRelChatsUsuarios;
import Control.ControlUsuarios;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import objetosNegocio.Chat;
import objetosNegocio.Rel_ChatUsuario;
import objetosNegocio.Usuario;

/**
 *
 * @author miran
 */
public class FrmRegistrarChat extends javax.swing.JFrame {
    ControlRelChatsUsuarios controlRel;
    ControlUsuarios controlUsuarios;
    ControlChats controlChats;
    Usuario usuario;
    Chat chat;
    DefaultListModel modeloUsuarios;
    List<Usuario>listaUsuarios;
    DefaultListModel modeloInvitados;
    List<Usuario>listaInvitados;
    List<Usuario>usuariosGuardados;
    /**
     * Creates new form Chat
     */
    public FrmRegistrarChat() {
        initComponents();
        this.setTitle("FrmRegistroChat");
        this.setLocationRelativeTo(this);
        this.controlRel= new ControlRelChatsUsuarios();
        this.controlUsuarios= new ControlUsuarios();
        this.controlChats= new ControlChats();
        listaUsuarios= new ArrayList<>();
        modeloUsuarios= new DefaultListModel();
        jListUsuarios.setModel(modeloUsuarios);
        listaInvitados= new ArrayList<>();
        modeloInvitados=new DefaultListModel();
        jListInvitados.setModel(modeloInvitados);        
    }
    
    public FrmRegistrarChat(Usuario usuario,Chat chat){
        this();
        this.usuario=usuario;
        this.llenarChat(chat);
        this.llenarListaUsuarios();
        this.agregarListaUsuarios();
        this.agregarListaInvitados();
    }

    public void cambiarLabel(String texto){
        lblTitulo.setText(texto);
    }
    
    public void llenarChat(Chat chat) {
          if (chat != null) {
            List<Chat>chats=controlChats.buscarTodas();
            for (Chat co : chats) {
                if(co.getIdchat()==chat.getIdchat()){
                    this.chat=co;
                }
            }
            this.txtIdChat.setText(String.valueOf(chat.getIdchat()));
            this.txtNombreChat.setText(chat.getNombre());
            this.usuariochatActual();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtIdChat = new javax.swing.JTextField();
        btCancelar = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListInvitados = new javax.swing.JList<>();
        lblUsuarios = new javax.swing.JLabel();
        lblMiembros = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListUsuarios = new javax.swing.JList<>();
        txtNombreChat = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblRegresar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(30, 169, 205));

        lblTitulo.setFont(new java.awt.Font("Source Sans Pro", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Crear chat");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        txtIdChat.setEditable(false);
        txtIdChat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "id del chat", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(30, 169, 205))); // NOI18N
        txtIdChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdChatActionPerformed(evt);
            }
        });

        btCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btCancelar.setFont(new java.awt.Font("Source Sans Pro", 1, 18)); // NOI18N
        btCancelar.setForeground(new java.awt.Color(30, 169, 205));
        btCancelar.setText("Cancelar");
        btCancelar.setToolTipText("");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btGuardar.setBackground(new java.awt.Color(255, 255, 255));
        btGuardar.setFont(new java.awt.Font("Source Sans Pro", 1, 18)); // NOI18N
        btGuardar.setForeground(new java.awt.Color(30, 169, 205));
        btGuardar.setText("Guardar");
        btGuardar.setToolTipText("");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(30, 169, 205));

        jListInvitados.setForeground(new java.awt.Color(30, 169, 205));
        jListInvitados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListInvitadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListInvitados);

        lblUsuarios.setForeground(new java.awt.Color(30, 169, 205));
        lblUsuarios.setText("Usuarios de JuatsApp");

        lblMiembros.setForeground(new java.awt.Color(30, 169, 205));
        lblMiembros.setText("Miembros del chat");

        jListUsuarios.setForeground(new java.awt.Color(30, 169, 205));
        jListUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListUsuarios);

        txtNombreChat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nombre del chat", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(30, 169, 205))); // NOI18N
        txtNombreChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreChatActionPerformed(evt);
            }
        });
        txtNombreChat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreChatKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 551, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMiembros))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsuarios)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIdChat, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtNombreChat, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(48, 48, 48)
                                        .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(30, 30, 30))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuarios)
                    .addComponent(lblMiembros))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGuardar)
                    .addComponent(btCancelar))
                .addGap(43, 43, 43))
        );

        txtIdChat.getAccessibleContext().setAccessibleName("Id del chat");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/grupo.png"))); // NOI18N

        lblRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        lblRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRegresar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdChatActionPerformed
        
    }//GEN-LAST:event_txtIdChatActionPerformed

    private void lblRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresarMouseClicked
        FrmChat chat = new FrmChat(this.usuario);
        this.dispose();
        chat.setVisible(true);
    }//GEN-LAST:event_lblRegresarMouseClicked

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
      if(this.txtIdChat.getText().isEmpty()){
          this.guardarChat();
      }else{
          this.actualizarChat();
      }
    }//GEN-LAST:event_btGuardarActionPerformed

    private void jListUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListUsuariosMouseClicked
       if(evt.getClickCount()>=2){
           this.agregarInvitado();
       }        
    }//GEN-LAST:event_jListUsuariosMouseClicked

    private void jListInvitadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListInvitadosMouseClicked
        if(evt.getClickCount()>=2){
           this.quitarInvitado();
       }  
    }//GEN-LAST:event_jListInvitadosMouseClicked

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void txtNombreChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreChatActionPerformed
     
    }//GEN-LAST:event_txtNombreChatActionPerformed

    private void txtNombreChatKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreChatKeyTyped
        if (txtNombreChat.getText().length() == 45) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreChatKeyTyped
  
    private void agregarInvitado(){
       Usuario usuarioInvitado=jListUsuarios.getSelectedValue();
       modeloUsuarios.removeElement(usuarioInvitado);
       modeloInvitados.addElement(usuarioInvitado);
    }
    
    private void quitarInvitado(){
        Usuario usuarioRem= jListInvitados.getSelectedValue();
        if(!usuarioRem.equals(this.usuario)){
            modeloInvitados.removeElement(usuarioRem);
            modeloUsuarios.addElement(usuarioRem);
        }else{
            JOptionPane.showMessageDialog(this, "No es posible remover al creador del chat", "Aviso", JOptionPane.WARNING_MESSAGE);
        }       
    }
   
    private void guardarChat() {
        if (this.chat == null) {
            if (!this.validarCampos()) {
                if (this.modeloInvitados.getSize() > 1) {
                    Chat chatNuevo = new Chat();
                    chatNuevo.setNombre(this.txtNombreChat.getText());
                    this.obtenerInvitados();
                    for (Usuario invitado : listaInvitados) {
                        Rel_ChatUsuario relUsuario = new Rel_ChatUsuario(chatNuevo, invitado);
                        chatNuevo.addrel(relUsuario);
                    }
                    if (controlChats.guardar(chatNuevo)) {
                        JOptionPane.showMessageDialog(this, "Chat creado exitosamente", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        this.usuario=controlUsuarios.buscarporID(usuario.getIdusuario());
                        FrmChat frmchat= new FrmChat(usuario);
                        frmchat.setVisible(true);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al crear el chat", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "al menos debe de estar 2 invitados en el chat", "aviso", JOptionPane.WARNING_MESSAGE);
                }
            }else{
                 JOptionPane.showMessageDialog(this, "El chat debe de tener un nombre", "aviso", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    
    private void actualizarChat(){       
        if(modeloInvitados.getSize()>1){
            this.obtenerInvitados();
            List<Usuario>nuevos=new ArrayList<>();
            List<Usuario>aEliminar=new ArrayList<>();
            for (Usuario usuarioGuardado : usuariosGuardados) {
                if(!listaInvitados.contains(usuarioGuardado)){
                    aEliminar.add(usuarioGuardado);
                }
            }
            for (Usuario usua : listaInvitados) {
                if(!usuariosGuardados.contains(usua)){
                    nuevos.add(usua);
                }
            }
            this.eliminar(aEliminar);
            Chat chat2=new Chat();
            chat2.setIdchat(chat.getIdchat());
            for (Usuario invitado : nuevos) {
                Rel_ChatUsuario rel= new Rel_ChatUsuario(chat2, invitado);
                chat2.addrel(rel);
            }
            chat2.setNombre(this.txtNombreChat.getText());
            if(controlChats.actualizar(chat2)){
                JOptionPane.showMessageDialog(this, "Chat actualizado con éxito", "Correcto", JOptionPane.INFORMATION_MESSAGE);
                FrmChat chat= new FrmChat(controlUsuarios.buscarporID(usuario.getIdusuario()));
                chat.setVisible(true);
                this.dispose();
            }
       }else{
            JOptionPane.showMessageDialog(this, "No puedes dejar un chat con un solo invitado","Advertencia",JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void eliminar(List<Usuario>aEliminar) {        
        List<Rel_ChatUsuario>relaciones=controlRel.buscarTodas();
        List<Usuario> eliminados = aEliminar;
        for (Usuario user : eliminados) {
            Rel_ChatUsuario rel = this.buscarRel(relaciones, user);
            controlRel.eliminarRelacion(rel.getIdrel_chatusuario());           
        }
    }
    
    private Rel_ChatUsuario buscarRel(List<Rel_ChatUsuario> relaciones, Usuario usuario){
        for (Rel_ChatUsuario relacione : relaciones) {
           if(relacione.getUsuario().equals(usuario) && relacione.getChat().equals(this.chat)){
               return relacione;
           }     
        }
        return null;
    }

       
    private void limpiarCampos() {
        this.txtNombreChat.setText("");
    }
    
    private void obtenerInvitados() {
        this.listaInvitados = new ArrayList<>();
        for (int i = 0; i < modeloInvitados.getSize(); i++) {
            listaInvitados.add((Usuario) modeloInvitados.getElementAt(i));
        }
    }
    
    private void usuariochatActual(){
        if(chat!=null){
            this.usuariosGuardados= new ArrayList<>();
            List<Rel_ChatUsuario>usuarios= chat.getRel_chatusuario();
            for (Rel_ChatUsuario user : usuarios) {
                this.usuariosGuardados.add(user.getUsuario());
            }
        }
    } 
    
    private void llenarListaUsuarios() {
            listaUsuarios = controlUsuarios.buscarTodas();
        if (this.chat == null) {
            listaUsuarios.remove(this.usuario);
            listaInvitados.add(usuario);
        } else {            
            List<Rel_ChatUsuario> rel = controlRel.buscarTodas();
            List<Rel_ChatUsuario> relUsuarios = new ArrayList<>();
            for (Rel_ChatUsuario re : rel) {
                if(re.getChat().getIdchat()==chat.getIdchat()){
                    relUsuarios.add(re);
                }
            }
            this.listaInvitados = new ArrayList<>();
            
            for (Rel_ChatUsuario user : relUsuarios) {
                this.listaInvitados.add(user.getUsuario());
            }
            for (Usuario disponible : listaInvitados) {
                if (listaUsuarios.contains(disponible)) {
                    listaUsuarios.remove(disponible);
                }
            }
        }
    }
                
    private void agregarListaUsuarios(){
        for (Usuario user : listaUsuarios) {
            modeloUsuarios.addElement(user);
        }
    }
    
    private void agregarListaInvitados(){
        for (Usuario user : listaInvitados) {
              modeloInvitados.addElement(user);  
        }
    }
    
    private boolean validarCampos(){
        boolean hayVacios=false;
        if(this.txtNombreChat.getText().isEmpty()){
            hayVacios=true;
        }else{
            
        }
        return hayVacios;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistrarChat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<Usuario> jListInvitados;
    private javax.swing.JList<Usuario> jListUsuarios;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMiembros;
    private javax.swing.JLabel lblRegresar;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUsuarios;
    private javax.swing.JTextField txtIdChat;
    private javax.swing.JTextField txtNombreChat;
    // End of variables declaration//GEN-END:variables
}
