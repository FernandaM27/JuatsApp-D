/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import Control.ControlUsuarios;
import Enums.Sexo;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetosNegocio.Usuario;

/**
 *
 * @author miran
 */
public class FrmRegistrarUsuario extends javax.swing.JFrame {

    private Usuario usuario = null;
    private ControlUsuarios controlUsuarios;
    /**
     * Creates new form Usuario
     */
    public FrmRegistrarUsuario() {
        initComponents();
        this.setTitle("FrmRegistrousuario");
        this.setLocationRelativeTo(this);
        this.controlUsuarios = new ControlUsuarios();
        this.quitarAdvertencias();
    }
    
    public FrmRegistrarUsuario(Usuario usuario){
        this();
        this.usuario=usuario;
        this.llenarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        txtContrasenia2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        txtCorreo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        rbFemenino = new javax.swing.JRadioButton();
        rbMasculino = new javax.swing.JRadioButton();
        rbRobot = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        dpfecha = new com.github.lgooddatepicker.components.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        imgNombre = new javax.swing.JLabel();
        imgFecha = new javax.swing.JLabel();
        imgCorreo = new javax.swing.JLabel();
        imgContrasenia2 = new javax.swing.JLabel();
        imgContrasenia = new javax.swing.JLabel();
        imgSexo = new javax.swing.JLabel();
        txtContrasenia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblRegresar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(30, 169, 205));

        lblTitulo.setText("Editar cuenta");
        lblTitulo.setFont(new java.awt.Font("Source Sans Pro", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        txtNombre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(30, 169, 205))); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtContrasenia2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Confirmar contraseña", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(30, 169, 205))); // NOI18N
        txtContrasenia2.setToolTipText("");
        txtContrasenia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContrasenia2KeyTyped(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Source Sans Pro", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(30, 169, 205));
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btGuardar.setText("Guardar");
        btGuardar.setBackground(new java.awt.Color(255, 255, 255));
        btGuardar.setFont(new java.awt.Font("Source Sans Pro", 1, 18)); // NOI18N
        btGuardar.setForeground(new java.awt.Color(30, 169, 205));
        btGuardar.setToolTipText("");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        txtCorreo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Correo electrónico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(30, 169, 205))); // NOI18N
        txtCorreo.setToolTipText("");
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoKeyTyped(evt);
            }
        });

        jLabel3.setText("Todos los campos son obligatorios");
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(30, 169, 205));

        rbFemenino.setText("Femenino");
        rbFemenino.setBackground(new java.awt.Color(255, 255, 255));
        rbFemenino.setForeground(new java.awt.Color(30, 169, 205));
        rbFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemeninoActionPerformed(evt);
            }
        });

        rbMasculino.setText("Masculino");
        rbMasculino.setBackground(new java.awt.Color(255, 255, 255));
        rbMasculino.setForeground(new java.awt.Color(30, 169, 205));
        rbMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMasculinoActionPerformed(evt);
            }
        });

        rbRobot.setText("Robot");
        rbRobot.setBackground(new java.awt.Color(255, 255, 255));
        rbRobot.setForeground(new java.awt.Color(30, 169, 205));
        rbRobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRobotActionPerformed(evt);
            }
        });

        jLabel4.setText("Sexo");
        jLabel4.setForeground(new java.awt.Color(30, 169, 205));

        dpfecha.setBackground(new java.awt.Color(255, 255, 255));
        dpfecha.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel6.setText("Fecha de nacimiento");
        jLabel6.setForeground(new java.awt.Color(30, 169, 205));

        jLabel7.setText("Nombre de usuario");
        jLabel7.setForeground(new java.awt.Color(30, 169, 205));

        imgNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        imgFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        imgCorreo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        imgContrasenia2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        imgContrasenia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        imgSexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/exc.png"))); // NOI18N

        txtContrasenia.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contraseña", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(30, 169, 205))); // NOI18N
        txtContrasenia.setToolTipText("");
        txtContrasenia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContraseniaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imgNombre)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(dpfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imgFecha))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(imgContrasenia)
                                        .addGap(25, 25, 25)
                                        .addComponent(txtContrasenia2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCorreo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(imgCorreo)
                                    .addComponent(imgContrasenia2)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(rbFemenino)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbMasculino)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbRobot)
                                        .addGap(18, 18, 18)
                                        .addComponent(imgSexo)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(6, 6, 6)))
                .addGap(21, 21, 21))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(btGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(181, 181, 181))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imgNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imgFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpfecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imgContrasenia2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbFemenino)
                                .addComponent(rbMasculino)
                                .addComponent(rbRobot))
                            .addComponent(imgSexo, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imgCorreo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtContrasenia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imgContrasenia)
                            .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGuardar)
                    .addComponent(jButton1)))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregarUsuario.png"))); // NOI18N

        lblRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        lblRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRegresar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresarMouseClicked
        if (usuario != null) {
            this.regresarChat();
        } 
        else {
            FrmLogin login = new FrmLogin();
            this.dispose();
            login.setVisible(true);
        }
    }//GEN-LAST:event_lblRegresarMouseClicked

    private void rbFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemeninoActionPerformed
        this.cambiarRbutton();
        this.rbFemenino.setSelected(true);
    }//GEN-LAST:event_rbFemeninoActionPerformed

    private void rbMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMasculinoActionPerformed
        this.cambiarRbutton();
        this.rbMasculino.setSelected(true);
    }//GEN-LAST:event_rbMasculinoActionPerformed

    private void rbRobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRobotActionPerformed
        this.cambiarRbutton();
        this.rbRobot.setSelected(true);
    }//GEN-LAST:event_rbRobotActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.limpiarCampos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        if (usuario==null) {
            this.guardarUsuario();
        } else {
            this.actualizarUsuario();
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        if (txtNombre.getText().length() == 45) {
            evt.consume();
        }    
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyTyped
       if (txtCorreo.getText().length() == 150) {
            evt.consume();
        }
        if (!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.' && evt.getKeyChar() != '@' && evt.getKeyChar() != '_' && evt.getKeyChar() != '-') {
            evt.consume();
        }        
        if (evt.getKeyChar() == '.' && txtCorreo.getText().contains(".")) {
            evt.consume();
        }
        if (evt.getKeyChar() == '@' && txtCorreo.getText().contains("@")) {
            evt.consume();
        }
        if (evt.getKeyChar() == '_' && txtCorreo.getText().contains("_")) {
            evt.consume();
        }
        if (evt.getKeyChar() == '-' && txtCorreo.getText().contains("-")) {
            evt.consume();
        } 
    }//GEN-LAST:event_txtCorreoKeyTyped

    private void txtContraseniaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContraseniaKeyTyped
      if (txtContrasenia.getText().length() == 10) {
            evt.consume();
        }
       if(!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar())){
            evt.consume();
       }
    }//GEN-LAST:event_txtContraseniaKeyTyped

    private void txtContrasenia2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContrasenia2KeyTyped
        if (txtContrasenia.getText().length() == 10) {
            evt.consume();
        }
       if(!Character.isLetter(evt.getKeyChar()) && !Character.isDigit(evt.getKeyChar())){
            evt.consume();
       }
    }//GEN-LAST:event_txtContrasenia2KeyTyped

    private void cambiarRbutton() {
        this.rbFemenino.setSelected(false);
        this.rbMasculino.setSelected(false);
        this.rbRobot.setSelected(false);
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }
    
    
    public void cambiarLabel(String texto) {
        lblTitulo.setText(texto);
    }

    private Calendar cambiarFecha() {
        LocalDate fec = dpfecha.getDate();
        GregorianCalendar fecha = new GregorianCalendar(fec.getYear(), fec.getMonthValue()-1, fec.getDayOfMonth());
        return fecha;
    }

    private Sexo obtenerSexo() {
        Sexo sexo = null;
        if (this.rbFemenino.isSelected()) {
            sexo = Sexo.FEMENINO;
        }
        if (this.rbMasculino.isSelected()) {
            sexo = Sexo.MASCULINO;
        }
        if (this.rbRobot.isSelected()) {
            sexo = Sexo.ROBOT;
        }
        return sexo;
    }

    private boolean validarFecha() {
        GregorianCalendar actual = new GregorianCalendar();
        actual.set(Calendar.HOUR_OF_DAY, 0);
        actual.set(Calendar.MINUTE, 0);
        actual.set(Calendar.SECOND, 0);
        LocalDate fec = dpfecha.getDate();
        GregorianCalendar g = new GregorianCalendar(fec.getYear(), fec.getMonthValue() - 1, fec.getDayOfMonth());
        if (g.getTime().before(actual.getTime())) {
            return true;
        }
        return false;
    }

    private boolean validarContrasenias() {
        return this.txtContrasenia.getText().equals(this.txtContrasenia2.getText());
    }

    private void guardarUsuario() {
        if (!camposVacios()) {
            String nombre = this.txtNombre.getText();
            String correo = this.txtCorreo.getText();
            String contrasenia = this.txtContrasenia.getText();
            String contrasenia2 = this.txtContrasenia2.getText();
            Calendar fecha = this.cambiarFecha();
            Sexo sexo2 = this.obtenerSexo();
            Usuario usuario = new Usuario(correo, fecha, sexo2, nombre, contrasenia);
            Usuario usuarioGuardado = controlUsuarios.buscarUsuario(usuario.getNombreUsuario());
            if (this.validarContrasenias() == true) {
                if (this.validarFecha() == true) {
                    if (usuarioGuardado == null) {
                        if (controlUsuarios.guardar(usuario)) {
                            JOptionPane.showMessageDialog(this, "Usuario guardado correctamente.",
                                    "Información", JOptionPane.INFORMATION_MESSAGE);
                            this.limpiarCampos();
                            FrmLogin login= new FrmLogin();
                            login.setVisible(true);
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al guardar al usuario.",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Nombre de usuario no disponible.",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La fecha no puede ser despues de la actual.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden.",
                        "Precaución", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Todos los campos deben de estar llenos.",
                    "Precaución", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void actualizarUsuario() {
        if (!camposVacios()) {
            Usuario usuarioGuardado = controlUsuarios.buscarUsuario(this.txtNombre.getText());
            if (this.validarContrasenias() == true) {
                if (this.validarFecha() == true) {
                    if (usuarioGuardado == null || usuarioGuardado.equals(this.usuario)) {
                        usuario.setNombreUsuario(this.txtNombre.getText());
                        usuario.setFechanacimiento(this.cambiarFecha());
                        usuario.setCorreoElectronico(this.txtCorreo.getText());
                        usuario.setSexo(this.obtenerSexo());
                        usuario.setContrasenia(this.txtContrasenia.getText());
                        usuario.setFechanacimiento(this.cambiarFecha());
                        if (controlUsuarios.actualizar(usuario)) {
                            JOptionPane.showMessageDialog(this, "Usuario actualizado correctamente.",
                                    "Información", JOptionPane.INFORMATION_MESSAGE);
                            this.limpiarCampos();
                            this.regresarChat();
                        } else {
                            JOptionPane.showMessageDialog(this, "Error al guardar al usuario.",
                                    "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Nombre de usuario no disponible.",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La fecha no puede ser despues de la actual.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden.",
                        "Precaución", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Todos los campos deben de estar llenos.",
                    "Precaución", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void regresarChat() {
        Usuario actual = controlUsuarios.buscarUsuario(usuario.getNombreUsuario());
        if (actual != null) {
            FrmChat chat = new FrmChat(usuario);
            chat.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Error al regresar al chat.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean camposVacios() {
        boolean hayVacios = false;
        if (this.txtNombre.getText().isEmpty() || this.txtNombre.getText().equals("")) {
            this.imgNombre.setVisible(true);
            hayVacios = true;
        } else {
            this.imgNombre.setVisible(false);
        }
        if (this.txtCorreo.getText().isEmpty() || this.txtCorreo.getText().equals("")) {
            this.imgCorreo.setVisible(true);
            hayVacios = true;
        } else {
            this.imgCorreo.setVisible(false);
        }
        if (this.txtContrasenia.getText().isEmpty() || this.txtContrasenia.getText().equals("")) {
            this.imgContrasenia.setVisible(true);
            hayVacios = true;
        } else {
            this.imgContrasenia.setVisible(false);
        }
        if (this.txtContrasenia2.getText().isEmpty() || this.txtContrasenia2.getText().equals("")) {
            this.imgContrasenia2.setVisible(true);
            hayVacios = true;
        } else {
            this.imgContrasenia2.setVisible(false);
        }
        if (this.dpfecha.getText().isEmpty()) {
            this.imgFecha.setVisible(true);
            hayVacios = true;
        } else {
            this.imgFecha.setVisible(false);
        }
        if (!this.rbFemenino.isSelected() && !this.rbMasculino.isSelected() && !this.rbRobot.isSelected()) {
            this.imgSexo.setVisible(true);
            hayVacios = true;
        } else {
            this.imgSexo.setVisible(false);
        }
        return hayVacios;
    }

    private void limpiarCampos() {
        this.txtCorreo.setText("");
        this.txtContrasenia.setText("");
        this.txtContrasenia2.setText("");
        this.txtCorreo.setText("");
        this.txtNombre.setText("");
        this.dpfecha.setDateToToday();
        this.rbFemenino.setSelected(false);
        this.rbMasculino.setSelected(false);
        this.rbRobot.setSelected(false);
    }

    private void quitarAdvertencias() {
        this.imgNombre.setVisible(false);
        this.imgSexo.setVisible(false);
        this.imgFecha.setVisible(false);
        this.imgCorreo.setVisible(false);
        this.imgContrasenia.setVisible(false);
        this.imgContrasenia2.setVisible(false);
    }

    private void llenarCampos(){
        if(this.usuario!=null){
            this.txtNombre.setText(this.usuario.getNombreUsuario());
            this.txtCorreo.setText(this.usuario.getCorreoElectronico());
            this.txtContrasenia.setText(this.usuario.getContrasenia());
            this.txtContrasenia2.setText(this.usuario.getContrasenia());
            this.cargarSexo(this.usuario.getSexo());
            Date fecha=this.usuario.getFechanacimiento().getTime();
            this.dpfecha.setDate(fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        }
    }
    
    private void cargarSexo(Sexo sexo){
        if(sexo.equals(sexo.MASCULINO)){
            this.rbMasculino.setSelected(true);
        }else if(sexo.equals(sexo.FEMENINO)){
            this.rbFemenino.setSelected(true);
        }else{
            this.rbRobot.setSelected(true);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistrarUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGuardar;
    private com.github.lgooddatepicker.components.DatePicker dpfecha;
    private javax.swing.JLabel imgContrasenia;
    private javax.swing.JLabel imgContrasenia2;
    private javax.swing.JLabel imgCorreo;
    private javax.swing.JLabel imgFecha;
    private javax.swing.JLabel imgNombre;
    private javax.swing.JLabel imgSexo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblRegresar;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JRadioButton rbFemenino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JRadioButton rbRobot;
    private javax.swing.JTextField txtContrasenia;
    private javax.swing.JTextField txtContrasenia2;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
